# SETTING
    # set the wait time of <ESC> key
        set-option -g escape-time 50

    # increase repeat timeout
        set-option -sg repeat-time 600

    # the base index
        # base index of window
            # set-option -g base-index 1
        # base index of pane
            # set-option -g pane-base-index 1

    # move status line to top
        # set -g status-position top

    # mouse using
        set-option -g mouse on

    # use 256 color
            set -g default-terminal "xterm-256color"
            set-option -ga terminal-overrides ",xterm-256color:Tc"

    # active vim mode
        set-window-option -g mode-keys vi

    # unknown setting
        set-option -s focus-events on

    # boost history
        set -g history-limit 5000

    # set-option terminal title
        set-option -g set-titles on

    # slightly longer status messages display time, if value is 0, the message will show untile any key was pressed
        option_displaytime=2000
        set-option -g display-panes-time $option_displaytime

    # redraw status line every 10 seconds
        set-option -g status-interval 10

    # related to code sending while pression Meta key
        # set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

    # activity
        set-option -g monitor-activity on
        set-option -g visual-activity off


# KEY BINDING
    # reset tmux prefix command key
        set-option -g prefix M-`
        unbind C-b

    # check session list
        bind-key l ls

    # toggle mouse
        bind m run "source $BLADE_TMUX_CONFIG_FILE_DIR/plug.sh; _toggle_mouse"

    # maximize pane
        bind + run "source $BLADE_TMUX_CONFIG_FILE_DIR/plug.sh; _maximize_pane"

    # reload configuration
        bind-key r source-file ~/.tmux.conf

    # edit configration
        bind e new-window -n ".tmux.conf" "sh -c '\${EDITOR:-vim} $BLADE_TMUX_CONFIG_FILE_DIR/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

    # find session
        bind C-f command-prompt -p find-session 'switch-client -t %%'

    # clear both screen and history
        bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

    # new session
        # bind-key n new-session

    # buffer
        # list paste buffers
            bind-key b list-buffers
        # paste form the top paster buffer
            bind-key p paste-buffer
        # choose which buffer to paste from
            bind-key P choose-buffer

    # window
        # previous window
            bind-key -r C-p previous-window
        # next window
            bind-key -r C-n next-window

    # pane control
        # swap pane key
            bind-key -r k select-pane -U
            bind-key -r j select-pane -D
            bind-key -r h select-pane -L
            bind-key -r l select-pane -R
        # resize pane
            bind-key -r H resize-pane -L 2
            bind-key -r J resize-pane -D 2
            bind-key -r K resize-pane -U 2
            bind-key -r L resize-pane -R 2
        # swap pane
            # swap current pane with the next one
                bind > swap-pane -D
            # swap current pane with the previous one
                bind < swap-pane -U
        # split window
            # split current window vertically
                bind v split-window -h
            # split current window horizontally
                bind s split-window -v
        # maximize current pane

    # copy mode
        # enter copy-mode with `<CR>`
            bind Enter copy-mode

        # start selcet with `v` (原始的文件中的 `-t` 以及 `vi-copy` 等东西已经过时了, 故不保留相关指令
            bind -T copy-mode-vi v send -X begin-selection

        # start rectangle select with `<C-v>`
            bind -T copy-mode-vi c send -X rectangle-toggle

        # copy with `y`
            bind -T copy-mode-vi y send -X copy-selection

        # clear selection with `<ESC>`
            bind -T copy-mode-vi Escape send -X clear-selection

        # select content by left-mouse drag
        #     the effect is:
        #         - click left key: cancel selection;
        #         - drag: selcet but don't copy immediately
            unbind -T copy-mode-vi MouseDragEnd1Pane
            bind -T copy-mode-vi MouseDown1Pane send -M select-pana\; send -X clear-selection

        # faster moving
            bind -T copy-mode-vi C-j send -X cursor-down\; send -X cursor-down\; send -X cursor-down\; send -X cursor-down\; send -X cursor-down
            bind -T copy-mode-vi C-k send -X cursor-up\; send -X cursor-up\; send -X cursor-up\; send -X cursor-up\; send -X cursor-up
            bind -T copy-mode-vi C-h send -X cursor-left\; send -X cursor-left\; send -X  cursor-left\; send -X cursor-left\; send -X cursor-left
            bind -T copy-mode-vi C-l send -X cursor-right\; send -X cursor-right\; send -X cursor-right\; send -X cursor-right\; send -X cursor-right

# PLUGS
    # spetial key bindings (related how to retain the current path while creating new pane or window)
        run "source '$BLADE_TMUX_CONFIG_FILE_DIR/win_pane_create.sh'; _apply_bindings"

    # set theme (seem's should have a repeat?)
        source "$BLADE_TMUX_CONFIG_FILE_DIR/theme.conf.tmux.sh"
        source "$BLADE_TMUX_CONFIG_FILE_DIR/theme_set.tmux"
